Elm.Piece = Elm.Piece || {};
Elm.Piece.make = function (_elm) {
   "use strict";
   _elm.Piece = _elm.Piece || {};
   if (_elm.Piece.values)
   return _elm.Piece.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   _P = _N.Ports.make(_elm),
   $moduleName = "Piece",
   $GameTypes = Elm.GameTypes.make(_elm);
   var baseValue = function (piece) {
      return function () {
         switch (piece.ctor)
         {case "Joukahainen": return 4;
            case "Kaarme": return 5;
            case "Kullervo": return 6;
            case "Lemminkainen": return 1;
            case "Louhi": return 2;
            case "SeppoIlmarinen": return 3;
            case "Ukko": return 7;
            case "Vainamoinen": return 8;}
         _U.badCase($moduleName,
         "between lines 43 and 51");
      }();
   };
   var toDisplayString = function (piece) {
      return function () {
         switch (piece.ctor)
         {case "Joukahainen":
            return "Joukahainen";
            case "Kaarme": return "Käärme";
            case "Kullervo":
            return "Kullervo";
            case "Lemminkainen":
            return "Lemminkäinen";
            case "Louhi": return "Louhi";
            case "SeppoIlmarinen":
            return "Seppo Ilmarinen";
            case "Ukko": return "Ukko";
            case "Vainamoinen":
            return "Väinämöinen";}
         _U.badCase($moduleName,
         "between lines 31 and 39");
      }();
   };
   var toString = function (piece) {
      return function () {
         switch (piece.ctor)
         {case "Joukahainen":
            return "Jouk";
            case "Kaarme": return "Kaarme";
            case "Kullervo":
            return "Kullervo";
            case "Lemminkainen":
            return "Lemmi";
            case "Louhi": return "Louhi";
            case "SeppoIlmarinen":
            return "Ilmar";
            case "Ukko": return "Ukko";
            case "Vainamoinen":
            return "Vain";}
         _U.badCase($moduleName,
         "between lines 19 and 27");
      }();
   };
   var fromString = function (str) {
      return function () {
         switch (str)
         {case "Ilmar":
            return $GameTypes.SeppoIlmarinen;
            case "Jouk":
            return $GameTypes.Joukahainen;
            case "Kaarme":
            return $GameTypes.Kaarme;
            case "Kullervo":
            return $GameTypes.Kullervo;
            case "Lemmi":
            return $GameTypes.Lemminkainen;
            case "Louhi":
            return $GameTypes.Louhi;
            case "Ukko":
            return $GameTypes.Ukko;
            case "Vain":
            return $GameTypes.Vainamoinen;}
         _U.badCase($moduleName,
         "between lines 7 and 15");
      }();
   };
   _elm.Piece.values = {_op: _op
                       ,fromString: fromString
                       ,toString: toString
                       ,toDisplayString: toDisplayString
                       ,baseValue: baseValue};
   return _elm.Piece.values;
};